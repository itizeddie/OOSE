#parse("/templates/layout.vm")
#set( $css_name = "calendar" )
#set( $javascript = "<script src='/js/modernizr.js'></script><script src='/js/main.js'></script>")
#@mainContent($css_name, $javascript)
<html lang="en" class="no-js">
<div class="topnav">
    <a class="active" href="#home">CALENDUE</a>
    <div class="search-container">
        <form action="/action_page.php">
          <input type="text" placeholder="Search Class..." name="search">
          <button type="submit"><i class="fa fa-search"></i></button>
        </form>
    </div>
</div>
<p id='demo'></p>
<p id='temp'></p>
<div id='calendar'></div>
<div id="myDiv"></div>
<div class="stat">
    <p id="average"></p>
</div>
<div class="stat">
    <p id="percentile"></p>
</div>
<div class="stat">
    <p id="toc"></p>
</div>
<br>
<div class="stat">
    <p id="rec"></p>
</div>
<br>
<div id='classCompareDiv'></div>
<div class='stat'>
    <p id='variation'></p>
</div>
<div id='classScoresDistributionDiv'></div>
</div>
<script>
    var events = [];
    getAssignments("calendar/get")
  $(document).ready(function() {

    $('#calendar').fullCalendar({
      header: {
        left: 'prev,next today',
        center: 'title',
        right: 'month,basicWeek,basicDay'
      },
      defaultDate: getDate(),
      navLinks: true, // can click day/week names to navigate views
      editable: false,
      eventLimit: true, // allow "more" link when too many events
      events: events
    });

  });

    // function to get average of an array
    function getAverage(array) {
        var sum = 0, avg = 0; // sum and average variables
        for(var i = 0; i < array.length; i++) { // add each element of array to sum
            sum += array[i]
        }
        avg = (sum / array.length).toFixed(2); // round average to 2 decimal places
        return avg;
    }

    // function to get current date
    function getDate() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth()+1; //January is 0!
        var yyyy = today.getFullYear();

        if(dd<10) {
            dd = '0'+dd
        }

        if(mm<10) {
            mm = '0'+mm
        }

        today = yyyy + '/' + mm + '/' + dd;
        return today;
    }

    function getAssignments(url) {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
              loadEvents(this);
            }
        };
        xhttp.open("GET", url, true);
        xhttp.send();
    }

    function loadEvents(xhttp) {
        var assignments = JSON.parse(xhttp.responseText);
        for(const date in assignments) {
            var name = assignments[date][0].title;
            events.push({title: name, start: date});
        }
    }

// Assignment score histogram graph
var x = [15, 25, 25, 30, 30, 30, 32.5, 35, 35, 35, 37.5, 37.5, 40, 40, 40, 40, 40, 45, 45, 45, 45, 45, 47.5, 47.5, 47.5, 50, 50];
avg = getAverage(x);
var mean = "Average: " + avg.toString() + "     ";
var percentile = "Percentile: 80";
var toc = "Avg Completion Time: 3.5 hours";
var rec = "Estimated Completion Time: 4.5 hours";
var assignmentHistogram = {
    x: x,
    type: 'histogram',
  };
var assignmentData = [assignmentHistogram];
var layout = {
    title: 'Assignment 1 Details',
    bargap: 0.1,
    xaxis: {
        range: [0, 50]
    }
}

// Class comparison graph
var assignments = ['Assignment 1', 'Assignment 2', 'Assignment 3']; // all assignments for a class
var userScores = [76, 85, 80]; // user's scores
var classAvgScores = [75.23, 82.13, 84.45]; // class average scores
var diff = []; // difference from mean
var variation; // average deviation from mean
for(var i = 0; i < userScores.length; i++) {
    diff.push(userScores[i] - classAvgScores[i]);
}
variation = "Average Deviation from Mean: " + getAverage(diff).toString() + "%";
var userData = {
    x: assignments,
    y: userScores,
    name: 'Your Scores',
    type: 'bar',
    text: userScores.map(String),
    textposition: 'auto'
};
var classData = {
    x: assignments,
    y: classAvgScores,
    name: 'Class Scores',
    type: 'bar',
    text: classAvgScores.map(String),
    textposition: 'auto'
};

var classCompareData = [userData, classData];
var classCompareLayout = {
    title: 'Assignments Overview',
    barmode: 'group'
};

// Class Scores Distribution Graph
var classAssignment1Scores = {
  y: [15, 25, 25, 30, 30, 30, 32.5, 35, 35, 35, 37.5, 37.5, 40, 40, 40, 40, 40, 45, 45, 45, 45, 45, 47.5, 47.5, 47.5, 50, 50],
  name: 'Assignment 1',
  type: 'box',
  marker: {
    color: 'rgb(10,140,208)'
  },
  boxmean: 'sd'
};
var classAssignment2Scores = {
  y: [10, 15, 25, 25, 25, 30, 32.5, 32.5, 37.5, 35, 37.5, 37.5, 42.5, 42.5, 40, 40, 40, 45, 47.5, 47.5, 45, 45, 47.5, 47.5, 47.5, 47.5, 50],
  name: 'Assignment 2',
  type: 'box',
  marker: {
    color: 'rgb(100,80,230)'
  },
  boxmean: 'sd'
};
var classAssignment3Scores = {
  y: [20, 20, 20, 20, 20, 30, 32.5, 35, 35, 35, 37.5, 37.5, 40, 40, 42.5, 42.5, 42.5, 45, 45, 45, 50, 50, 50, 50, 50, 50, 50],
  name: 'Assignment 3',
  type: 'box',
  marker: {
    color: 'rgb(190,100,70)'
  },
  boxmean: 'sd'
};

var classAssignmentsData = [classAssignment1Scores, classAssignment2Scores, classAssignment3Scores];

var classAssignmentScoresLayout = {
  title: 'Class Scores By Assignment Distribution'
};

Plotly.newPlot('myDiv', assignmentData, layout);
document.getElementById('average').innerHTML = mean;
document.getElementById('percentile').innerHTML = percentile;
document.getElementById('toc').innerHTML = toc;
document.getElementById('rec').innerHTML = rec;

Plotly.newPlot('classCompareDiv', classCompareData, classCompareLayout);
document.getElementById('variation').innerHTML = variation;

Plotly.newPlot('classScoresDistributionDiv', classAssignmentsData, classAssignmentScoresLayout);

</script>
#end