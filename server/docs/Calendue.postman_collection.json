{
	"info": {
		"_postman_id": "d6dc2bf2-cac6-414f-9a45-6e39d2f77d1a",
		"name": "Calendue",
		"description": "This is the specification for the Calendue API. Import the development environment to make requests to the localhost server.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New Account",
			"item": [
				{
					"name": "No Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9c3c93c-b2e4-4b7f-8c1a-b7fb23568c58",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Email cannot be blank.'\", () => pm.response.to.have.body(\"Email cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "test_user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								},
								{
									"key": "email",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{host}}/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "No Username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9c3c93c-b2e4-4b7f-8c1a-b7fb23568c58",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Username cannot be blank.'\", () => pm.response.to.have.body(\"Username cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "test_user",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								},
								{
									"key": "email",
									"value": "blah@blah.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "No Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9c3c93c-b2e4-4b7f-8c1a-b7fb23568c58",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Password cannot be blank.'\", () => pm.response.to.have.body(\"Password cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "test_user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text",
									"disabled": true
								},
								{
									"key": "email",
									"value": "blah@blah.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Blank Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9c3c93c-b2e4-4b7f-8c1a-b7fb23568c58",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Email cannot be blank.'\", () => pm.response.to.have.body(\"Email cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "test_user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								},
								{
									"key": "email",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Blank Username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9c3c93c-b2e4-4b7f-8c1a-b7fb23568c58",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Username cannot be blank.'\", () => pm.response.to.have.body(\"Username cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "",
									"type": "text"
								},
								{
									"key": "email",
									"value": "blah@blah.co",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Short Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9c3c93c-b2e4-4b7f-8c1a-b7fb23568c58",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Password must be at least 5 characters'\", () => pm.response.to.have.body(\"Password must be at least 5 characters\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "test_user",
									"type": "text"
								},
								{
									"key": "email",
									"value": "blah@blah.co",
									"type": "text"
								},
								{
									"key": "password",
									"value": "1234",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "727605ba-d54b-43e2-b4cd-387b648280e7",
								"exec": [
									"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c261dbf0-c5c1-4d05-9984-283444407aaa",
								"exec": [
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/accounts?email=blah@blah.com`,",
									"    method: 'GET'",
									"}",
									"",
									"pm.sendRequest(request, function(err, res) {",
									"    if (res.code == 200) {",
									"        request = {",
									"            url:`${pm.variables.get(\"host\")}/accounts/${res.json()}`,",
									"            method: 'DELETE'",
									"        }",
									"    ",
									"        pm.sendRequest(request);",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "test_user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								},
								{
									"key": "email",
									"value": "blah@blah.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": [
						{
							"name": "Successful Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "test_user",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345",
											"type": "text"
										},
										{
											"key": "email",
											"value": "blah@blah.com",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}/accounts",
									"host": [
										"{{host}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 16 Oct 2018 19:37:42 GMT"
								},
								{
									"key": "Server",
									"value": "Javalin"
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Email Unique",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9c3c93c-b2e4-4b7f-8c1a-b7fb23568c58",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Email is already taken'\", () => pm.response.to.have.body(\"Email is already taken\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "test_user",
									"type": "text"
								},
								{
									"key": "email",
									"value": "blah@blah.co",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				}
			],
			"description": "Creates a new account.\n\nAccepts `email`, `username`, and `password` params for the user.\n\nReturns status code `201` upon success with the user ID as the response content.\n\nReturns status code `400` upon validation failure with the error message as the content.\n\nValidations are: 1) Email, Username, and Password cannot be blank, 2) Password must be >= 5 characters",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c4a65e63-b293-445f-aa3e-4b215861f213",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ea436e46-ea69-484d-9fac-3b95c3d548ac",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Logout",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c4d9bbb8-5e42-4107-b9c5-e5390fc3d576",
								"exec": [
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/login`,",
									"    method: 'POST',",
									"    body: {",
									"        mode: 'formdata',",
									"        formdata: [",
									"            {key: 'username', value: 'test_user', description: {content: \"\", type: \"text/plain\"}},",
									"            {key: 'password', value: '12345', description: {content: \"\", type: \"text/plain\"}},",
									"        ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(request);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a4cfa9f8-9036-4f24-8abc-4602c5fc9eed",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
									"pm.test(\"Content has flash message\", () => pm.expect(pm.response.text()).to.include(\"been logged out\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "No Username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0648a0a6-1fc9-45d5-9fe6-fef2ad2ab248",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Username cannot be blank\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "No Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0648a0a6-1fc9-45d5-9fe6-fef2ad2ab248",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Password cannot be blank\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "12345",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Credentials",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2c52aed9-c1bd-4d91-9160-aa5b611b5926",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "39067e9c-e442-444d-a440-e0c066f31820",
								"exec": [
									"pm.test(\"Status code is 401\", () => pm.response.to.have.status(401));",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid Username or Password\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "invalid_creds",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2c52aed9-c1bd-4d91-9160-aa5b611b5926",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "39067e9c-e442-444d-a440-e0c066f31820",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "test_user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			],
			"description": "POST Request: Login accepts a `username` and `password` param.\n\nRedirect with code 303 to `/` upon success.\nRender failure with status code 401 if credentials are incorrect."
		},
		{
			"name": "New Term",
			"item": [
				{
					"name": "No Title",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c831a5e-6e7e-4038-8356-5f49daedf5c9",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Title cannot be blank.'\", () => pm.response.to.have.body(\"Title cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "start_date",
									"value": "2018-10-10",
									"type": "text"
								},
								{
									"key": "end_date",
									"value": "2018-12-20",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Fall 2018",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{host}}/term",
							"host": [
								"{{host}}"
							],
							"path": [
								"term"
							]
						}
					},
					"response": []
				},
				{
					"name": "No Start Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c831a5e-6e7e-4038-8356-5f49daedf5c9",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Start Date cannot be blank.'\", () => pm.response.to.have.body(\"Start Date cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "start_date",
									"value": "2018-10-10",
									"type": "text",
									"disabled": true
								},
								{
									"key": "end_date",
									"value": "2018-12-20",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Fall 2018",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/term",
							"host": [
								"{{host}}"
							],
							"path": [
								"term"
							]
						}
					},
					"response": []
				},
				{
					"name": "No End Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c831a5e-6e7e-4038-8356-5f49daedf5c9",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'End Date cannot be blank.'\", () => pm.response.to.have.body(\"End Date cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "start_date",
									"value": "2018-10-10",
									"type": "text"
								},
								{
									"key": "end_date",
									"value": "2018-12-20",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "Fall 2018",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/term",
							"host": [
								"{{host}}"
							],
							"path": [
								"term"
							]
						}
					},
					"response": []
				},
				{
					"name": "Blank Title",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c831a5e-6e7e-4038-8356-5f49daedf5c9",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Title cannot be blank.'\", () => pm.response.to.have.body(\"Title cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "start_date",
									"value": "2018-10-10",
									"type": "text"
								},
								{
									"key": "end_date",
									"value": "2018-12-20",
									"type": "text"
								},
								{
									"key": "title",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/term",
							"host": [
								"{{host}}"
							],
							"path": [
								"term"
							]
						}
					},
					"response": []
				},
				{
					"name": "Blank Start Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c831a5e-6e7e-4038-8356-5f49daedf5c9",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Start Date cannot be blank.'\", () => pm.response.to.have.body(\"Start Date cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "start_date",
									"value": "",
									"type": "text"
								},
								{
									"key": "end_date",
									"value": "2018-12-20",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Fall 2018",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/term",
							"host": [
								"{{host}}"
							],
							"path": [
								"term"
							]
						}
					},
					"response": []
				},
				{
					"name": "Blank End Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c831a5e-6e7e-4038-8356-5f49daedf5c9",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'End Date cannot be blank.'\", () => pm.response.to.have.body(\"End Date cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "start_date",
									"value": "2018-10-10",
									"type": "text"
								},
								{
									"key": "end_date",
									"value": "",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Fall 2018",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/term",
							"host": [
								"{{host}}"
							],
							"path": [
								"term"
							]
						}
					},
					"response": []
				},
				{
					"name": "End Date Before Start Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c831a5e-6e7e-4038-8356-5f49daedf5c9",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'End Date cannot be before Start Date.'\", () => pm.response.to.have.body(\"End Date cannot be before Start Date.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "start_date",
									"value": "2018-10-10",
									"type": "text"
								},
								{
									"key": "end_date",
									"value": "2018-10-09",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Fall 2018",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/term",
							"host": [
								"{{host}}"
							],
							"path": [
								"term"
							]
						}
					},
					"response": []
				},
				{
					"name": "Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c831a5e-6e7e-4038-8356-5f49daedf5c9",
								"exec": [
									"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
									"",
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/term/${pm.response.text()}`,",
									"    method: 'DELETE'",
									"};",
									"",
									"pm.sendRequest(request);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b1a45943-33b9-4f94-bcf5-7b7dad63850a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "start_date",
									"value": "2018-10-10",
									"type": "text"
								},
								{
									"key": "end_date",
									"value": "2018-12-20",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Fall 2018",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/term",
							"host": [
								"{{host}}"
							],
							"path": [
								"term"
							]
						}
					},
					"response": []
				}
			],
			"description": "POST Request: Creates a new term for the user. Accepts a `title` param, `start_date` param and `end_date` param.\n\nReturns 201 upon success.\nReturns 400 upon input validation.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1a7398e0-d496-41de-95b5-4094a6ccc410",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d28604d4-d2a3-4309-864a-bd8c885f1efe",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "New Course",
			"item": [
				{
					"name": "No Title",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "829073d4-57f1-486b-ac79-137d07609e6d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "222cc608-bbed-4ee2-8e34-ba9df72953da",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Title cannot be blank.'\", () => pm.response.to.have.body(\"Title cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Course 25",
									"type": "text",
									"disabled": true
								},
								{
									"key": "term_id",
									"value": "{{$TERM_ID}}",
									"type": "text"
								},
								{
									"key": "gradeScope_id",
									"value": "255",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/course",
							"host": [
								"{{host}}"
							],
							"path": [
								"course"
							]
						}
					},
					"response": []
				},
				{
					"name": "Blank Title",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "829073d4-57f1-486b-ac79-137d07609e6d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "222cc608-bbed-4ee2-8e34-ba9df72953da",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"pm.test(\"Response is 'Title cannot be blank.'\", () => pm.response.to.have.body(\"Title cannot be blank.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "",
									"type": "text"
								},
								{
									"key": "term_id",
									"value": "{{$TERM_ID}}",
									"type": "text"
								},
								{
									"key": "gradeScope_id",
									"value": "255",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/course",
							"host": [
								"{{host}}"
							],
							"path": [
								"course"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Term ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "829073d4-57f1-486b-ac79-137d07609e6d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c593e344-3cd8-4f15-93ae-b19defc998a3",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"Response is 'Term ID is invalid.'\", () => pm.response.to.have.body(\"Term ID is invalid.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Course 25",
									"type": "text"
								},
								{
									"key": "term_id",
									"value": "invalid",
									"type": "text"
								},
								{
									"key": "gradeScope_id",
									"value": "255",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/course",
							"host": [
								"{{host}}"
							],
							"path": [
								"course"
							]
						}
					},
					"response": []
				},
				{
					"name": "Nonexistent Term ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "829073d4-57f1-486b-ac79-137d07609e6d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c593e344-3cd8-4f15-93ae-b19defc998a3",
								"exec": [
									"pm.test(\"Status code is 400\", () => pm.response.to.have.status(400));",
									"",
									"pm.test(\"Response is 'Term does not exist.'\", () => pm.response.to.have.body(\"Term does not exist.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Course 25",
									"type": "text"
								},
								{
									"key": "term_id",
									"value": "0",
									"type": "text"
								},
								{
									"key": "gradeScope_id",
									"value": "255",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/course",
							"host": [
								"{{host}}"
							],
							"path": [
								"course"
							]
						}
					},
					"response": []
				},
				{
					"name": "Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "829073d4-57f1-486b-ac79-137d07609e6d",
								"exec": [
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/term`,",
									"    method: 'POST',",
									"    body: {",
									"        mode: 'formdata',",
									"        formdata: [",
									"            {key: 'start_date', value: '2018-10-10', description: {content: \"\", type: \"text/plain\"}},",
									"            {key: 'end_date', value: '2018-12-20', description: {content: \"\", type: \"text/plain\"}},",
									"            {key: 'title', value: 'Fall 2018', description: {content: \"\", type: \"text/plain\"}}",
									"        ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(request, function (err, response) {",
									"    if (response.code == 201) {",
									"        pm.environment.set(\"TERM_ID\", response.text());",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c593e344-3cd8-4f15-93ae-b19defc998a3",
								"exec": [
									"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
									"",
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/term/${pm.environment.get('TERM_ID')}`,",
									"    method: 'DELETE'",
									"};",
									"",
									"pm.sendRequest(request);",
									"",
									"",
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/course/${pm.response.text()}`,",
									"    method: 'DELETE'",
									"};"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Course 25",
									"type": "text"
								},
								{
									"key": "term_id",
									"value": "{{TERM_ID}}",
									"type": "text"
								},
								{
									"key": "gradeScope_id",
									"value": "255",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/course",
							"host": [
								"{{host}}"
							],
							"path": [
								"course"
							]
						}
					},
					"response": []
				}
			],
			"description": "POST Request: Adds a new course to the user's schedule. Accepts the `title` param (the chosen title of the course), and `term_id` param which is the selected term for the user.\n\nReturns 201 upon success.\nReturns 400 if input fails validation (if `title` is blank, `term_id` is not found, or `token` is not found).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "67f8d911-aaff-4e83-8a54-ce1a787fab78",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2a57a0b4-9941-4ddc-8e34-fd288dffa315",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "New Assignment",
			"item": [
				{
					"name": "Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "864bd887-770c-433b-8a21-e2bb1f03d93c",
								"exec": [
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/term`,",
									"    method: 'POST',",
									"    body: {",
									"        mode: 'formdata',",
									"        formdata: [",
									"            {key: 'start_date', value: '2018-10-10', description: {content: \"\", type: \"text/plain\"}},",
									"            {key: 'end_date', value: '2018-12-20', description: {content: \"\", type: \"text/plain\"}},",
									"            {key: 'title', value: 'Fall 2018', description: {content: \"\", type: \"text/plain\"}}",
									"        ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(request, function (err, response) {",
									"    if (response.code == 201) {",
									"        pm.environment.set(\"TERM_ID\", response.text());",
									"                ",
									"        request = {",
									"            url:`${pm.variables.get(\"host\")}/course`,",
									"            method: 'POST',",
									"            body: {",
									"                mode: 'formdata',",
									"                formdata: [",
									"                    {key: 'term_id', value: pm.environment.get(\"TERM_ID\"), description: {content: \"\", type: \"text/plain\"}},",
									"                    {key: 'title', value: 'Test Course', description: {content: \"\", type: \"text/plain\"}},",
									"                    {key: 'gradeScope_id', value: 255, description: {content: \"\", type: \"text/plain\"}}",
									"                ]",
									"            }",
									"        };",
									"        ",
									"        pm.sendRequest(request, function (err, response) {",
									"            if (response.code == 201) {",
									"                pm.environment.set(\"COURSE_ID\", response.text());",
									"            }",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1c5ba44b-fcc5-49e6-bf30-44244d5d56a2",
								"exec": [
									"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
									"",
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/term/${pm.environment.get('TERM_ID')}`,",
									"    method: 'DELETE'",
									"};",
									"",
									"pm.sendRequest(request);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Assignment 25",
									"type": "text"
								},
								{
									"key": "course_id",
									"value": "{{COURSE_ID}}",
									"type": "text"
								},
								{
									"key": "due_date",
									"value": "2018-09-16",
									"type": "text"
								},
								{
									"key": "grade",
									"value": "90/100",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/assignment",
							"host": [
								"{{host}}"
							],
							"path": [
								"assignment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Calendar",
			"item": [
				{
					"name": "Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1b604d67-1157-4e50-b440-886df44c5393",
								"exec": [
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/login`,",
									"    method: 'POST',",
									"    body: {",
									"        mode: 'formdata',",
									"        formdata: [",
									"            {key: 'username', value: 'test_user', description: {content: \"\", type: \"text/plain\"}},",
									"            {key: 'password', value: '12345', description: {content: \"\", type: \"text/plain\"}},",
									"        ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(request, function(err, response) {",
									"    request = {",
									"        url:`${pm.variables.get(\"host\")}/term`,",
									"        method: 'POST',",
									"        body: {",
									"            mode: 'formdata',",
									"            formdata: [",
									"                {key: 'start_date', value: '2018-10-10', description: {content: \"\", type: \"text/plain\"}},",
									"                {key: 'end_date', value: '2018-12-20', description: {content: \"\", type: \"text/plain\"}},",
									"                {key: 'title', value: 'Fall 2018', description: {content: \"\", type: \"text/plain\"}}",
									"            ]",
									"        }",
									"    };",
									"    ",
									"    pm.sendRequest(request, function (err, response) {",
									"        if (response.code == 201) {",
									"            pm.environment.set(\"TERM_ID\", response.text());",
									"                ",
									"            request = {",
									"                url:`${pm.variables.get(\"host\")}/course`,",
									"                method: 'POST',",
									"                body: {",
									"                    mode: 'formdata',",
									"                    formdata: [",
									"                        {key: 'term_id', value: pm.environment.get(\"TERM_ID\"), description: {content: \"\", type: \"text/plain\"}},",
									"                        {key: 'title', value: 'Fall 2018', description: {content: \"\", type: \"text/plain\"}},",
									"                        {key: 'gradeScope_id', value: 255, description: {content: \"\", type: \"text/plain\"}}",
									"                    ]",
									"                }",
									"            };",
									"        ",
									"            pm.sendRequest(request, function (err, response) {",
									"                if (response.code == 201) {",
									"                    pm.environment.set(\"COURSE_ID\", response.text());",
									"                    ",
									"                    request = {",
									"                        url:`${pm.variables.get(\"host\")}/assignment`,",
									"                        method: 'POST',",
									"                        body: {",
									"                            mode: 'formdata',",
									"                            formdata: [",
									"                                {key: 'due_date', value: \"2018-09-16\", description: {content: \"\", type: \"text/plain\"}},",
									"                                {key: 'course_id', value: pm.environment.get(\"COURSE_ID\"), description: {content: \"\", type: \"text/plain\"}},",
									"                                {key: 'title', value: 'Assignment 1', description: {content: \"\", type: \"text/plain\"}},",
									"                                {key: 'grade', value: '20/30', description: {content: \"\", type: \"text/plain\"}}",
									"                            ]",
									"                        }",
									"                    }",
									"                    ",
									"                    pm.sendRequest(request);",
									"                }",
									"            });",
									"        }",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "afdcc510-9fab-41c6-93bf-6be08ec077cb",
								"exec": [
									"/*{",
									"\t\"<date>\": [<assignment>],",
									"\t\"2018-10-10\": [{\"name\": 'Assignment 1', \"uuid\": <assignment UUID>}],",
									"\t...",
									"}*/",
									"",
									"//pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
									"",
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
									"",
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/term/${pm.environment.get('TERM_ID')}`,",
									"    method: 'DELETE'",
									"};",
									"",
									"pm.sendRequest(request);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"value": "",
									"type": "text"
								},
								{
									"key": "",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/calendar/get",
							"host": [
								"{{host}}"
							],
							"path": [
								"calendar",
								"get"
							]
						}
					},
					"response": []
				}
			],
			"description": "This retrives the calendar from the server. The server will return the calendar for the current user based on their session cookies. Accepts filter params as 'courses[0][uuid]=<course UUID>' to show course 0.\n\nReturns a JSON representation of the calendar:\n\ni.e.\n\n`\n{\n\t\"<date>\": [<assignment>],\n\t\"2018-10-10\": [{\"name\": 'Assignment 1', \"uuid\": <assignment UUID>}],\n\t...\n}\n`",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bd1db1c9-ee80-496b-80a3-2cb76361933c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e20a284e-7614-47b7-bea0-3bc7342de7b1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Scrape",
			"item": [
				{
					"name": "Scrape",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc401cc6-a14c-4555-a638-3fac3b3605f0",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "token",
									"value": "fcfba16d-1b88-48e4-b021-f2f854d15ddc",
									"type": "text"
								},
								{
									"key": "url",
									"value": "https://www.gradescope.com",
									"type": "text"
								},
								{
									"key": "document",
									"value": "<!DOCTYPE html><html lang=\"en\"><head><title>Gradescope | 601.433/633 Dashboard</title><meta id=\"viewport\" name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /><script data-apikey=\"77b51cafdf55184c5c33ee25bd688c71\" src=\"//d2wy8f7a9ursnm.cloudfront.net/bugsnag-3.min.js\"></script><link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/assets/logo/logo_bars_48-7d44e5ee05bdb7275955018f74ef43014a0c879c3794297b66c9d9321ca2a964.png\" /><link rel=\"stylesheet\" media=\"all\" href=\"/assets/application2-99a88ccb4ab1487b700b63dc33010e7d19c47a9ed1c4615c7756f8dee131ed28.css\" debug=\"false\" /><script src=\"/assets/application-135db7219ea628762356279a74e4a1b03617d4e8bb426dcc6560ced67d0e3dbd.js\" debug=\"false\"></script><script src=\"/packs/manifest-cecc672a6e2d97c5236f.js\"></script><script src=\"/packs/vendor-513e1ce9fcd0e3860c1b.js\"></script><script src=\"/packs/global_components-4086bab6319cd409dcda.js\"></script><meta name=\"csrf-param\" content=\"authenticity_token\" />\n<meta name=\"csrf-token\" content=\"+3HhV4GXcG5BpVPM1l9yUNbt7fw1el1PyLS4hc+U4b3zyq+eLlZ9i4UUK9uh5dG+J8cQ5HI1mZAo0YlvdG3puQ==\" /><meta name=\"pinterest\" content=\"nopin\" /><!--[if lt IE 9]><script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script><![endif]--></head><body data-action=\"show\" data-controller=\"courses\"><script type=\"text/javascript\">if (typeof Bugsnag !== 'undefined') {\n  Bugsnag.releaseStage = \"production\";\n  Bugsnag.notifyReleaseStages = [\"staging\", \"production\"]; Bugsnag.user = {name: \"EDDIE HEREDIA\", email: \"eheredi1@jhu.edu\"};}</script><a class=\"sr-only sr-only-focusable btn modal--btnPrimary skipLink\" href=\"#main-content\">Skip to content</a><nav class=\"l-sidebar\"><div class=\"sidebar--content\"><div class=\"sidebar--logoHeader\"><div class=\"logo\"><a aria-label=\"back to home\" href=\"/\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"29\" height=\"26\" viewBox=\"0 0 29 26\"><g fill-rule=\"evenodd\"><path d=\"M0 14.763h5.915V25.5H0zM15.057 0h5.915v25.5h-5.915zM7.528 8.589h5.915V25.5H7.528zM22.585 6.174H28.5V25.5h-5.915z\"></path></g></svg>\n<div aria-hidden=\"true\" class=\"logo--text\">gradescope</div></a></div><div aria-label=\"toggle sidebar\" class=\"collapseIcon js-toggleSidebar js-interactiveElement\"><i aria-hidden=\"true\" class=\"fa fa-chevron-left collapseIcon--leftArrow\"></i><i aria-hidden=\"true\" class=\"fa fa-bars collapseIcon--hamburger\"></i><i aria-hidden=\"true\" class=\"fa fa-chevron-right collapseIcon--rightArrow\"></i></div></div><div class=\"sidebar--collapsedHomeIcon\"><a aria-label=\"back to home\" href=\"/\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"29\" height=\"26\" viewBox=\"0 0 29 26\"><g fill-rule=\"evenodd\"><path d=\"M0 14.763h5.915V25.5H0zM15.057 0h5.915v25.5h-5.915zM7.528 8.589h5.915V25.5H7.528zM22.585 6.174H28.5V25.5h-5.915z\"></path></g></svg>\n</a></div><h1 class=\"sidebar--title\"><a href=\"/courses/15257\">601.433/633</a></h1><div class=\"sidebar--subtitle\">Introduction to Algorithms/Algorithms 1 </div><ul class=\"sidebar--menu\"><li class=\"sidebar--menuItem\"><a aria-label=\"Dashboard\" href=\"/courses/15257\" class=\"active\"><div class=\"sidebar--menuItemIcon\"><i class=\"fa fa-tasks\"></i></div><div class=\"sidebar--menuItemLabel\">Dashboard</div></a></li><li class=\"sidebar--menuItem\"><a aria-label=\"Regrade Requests\" href=\"/courses/15257/regrade_requests\"><div class=\"sidebar--menuItemIcon\"><i class=\"fa fa-repeat\"></i></div><div class=\"sidebar--menuItemLabel\">Regrade Requests</div></a></li></ul><h2 class=\"sidebar--menuHeader\">Instructor</h2><ul class=\"sidebar--menu sidebar--menu-hiddenWhenCollapsed js-sidebarRoster\"><li class=\"sidebar--menuItem\" id=\"sidebar-instructor-210401\"><div class=\"sidebar--menuItemIcon\"><div class=\"fa-stack-container\"><span class=\"fa-stack fa-lg\"><i class=\"fa fa-circle-thin fa-stack-2x\"></i><i class=\"fa fa-user fa-stack-1x sidebar-roster-img\"></i></span></div></div><div class=\"sidebar--menuItemLabel\">Vladimir Braverman</div></li></ul><div class=\"sidebar--userProfileMenuMobile\"><h2 class=\"sidebar--menuHeader\">More</h2><a class=\"sidebar--userProfileMenuMobileLink js-openHelpCenter\" href=\"/help\"><i aria-hidden=\"true\" class=\"fa fa-question-circle\"></i> Help</a><a class=\"sidebar--userProfileMenuMobileLink\" href=\"/pricing\"><i aria-hidden=\"true\" class=\"fa fa-arrow-circle-up\"></i> Pricing</a><a class=\"sidebar--userProfileMenuMobileLink\" href=\"/about\"><i aria-hidden=\"true\" class=\"fa fa-info-circle\"></i> About Us</a><a class=\"sidebar--userProfileMenuMobileLink\" href=\"/account/edit\"><i aria-hidden=\"true\" class=\"fa fa-user\"></i> Edit Account</a><a class=\"sidebar--userProfileMenuMobileLink\" href=\"/logout\"><i aria-hidden=\"true\" class=\"fa fa-power-off\"></i> Log Out</a></div></div><div aria-label=\"toggle more options\" class=\"sidebar--userProfile\"><div aria-hidden=\"true\" class=\"sidebar--userProfileIcon\" role=\"presentation\"><div class=\"fa-stack-container\"><span class=\"fa-stack fa-lg\"><i aria-hidden=\"true\" class=\"fa fa-circle-thin fa-stack-2x\"></i><i aria-hidden=\"true\" class=\"fa fa-user fa-stack-1x\"></i></span></div></div><div class=\"sidebar--userProfileName\">Account</div><div class=\"sidebar--userProfileMenuToggle\"><i aria-label=\"toggle account menu\" class=\"fa fa-angle-up\"></i></div></div><div class=\"modal modal-helpCenter\"><div data-url=\"/help/contents\" id=\"help-center\"></div></div></nav><div class=\"sidebar--userProfileMenu\"><a class=\"popover--listItem popover--listItem-userProfileMenu js-openHelpCenter\" href=\"/help\"><i aria-hidden=\"true\" class=\"fa fa-question-circle\"></i> Help</a><a class=\"popover--listItem popover--listItem-userProfileMenu\" href=\"/pricing\"><i aria-hidden=\"true\" class=\"fa fa-arrow-circle-up\"></i> Pricing</a><a class=\"popover--listItem popover--listItem-userProfileMenu\" href=\"/about\"><i aria-hidden=\"true\" class=\"fa fa-info-circle\"></i> About Us</a><a class=\"popover--listItem popover--listItem-userProfileMenu\" href=\"/account/edit\"><i aria-hidden=\"true\" class=\"fa fa-user\"></i> Edit Account</a><a class=\"popover--listItem popover--listItem-userProfileMenu\" href=\"/logout\"><i aria-hidden=\"true\" class=\"fa fa-power-off\"></i> Log Out</a></div><nav class=\"l-mobileTopNav\"><div aria-expanded=\"false\" aria-label=\"expand sidebar\" class=\"collapseIcon js-toggleSidebarMobile collapseIcon-is-collapsed\"><i aria-hidden=\"true\" class=\"fa fa-chevron-left collapseIcon--leftArrow\"></i><i aria-hidden=\"true\" class=\"fa fa-bars collapseIcon--hamburger\"></i><i aria-hidden=\"true\" class=\"fa fa-chevron-right collapseIcon--rightArrow\"></i></div><div class=\"logo\"><a aria-label=\"back to home\" href=\"/\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"29\" height=\"26\" viewBox=\"0 0 29 26\"><g fill-rule=\"evenodd\"><path d=\"M0 14.763h5.915V25.5H0zM15.057 0h5.915v25.5h-5.915zM7.528 8.589h5.915V25.5H7.528zM22.585 6.174H28.5V25.5h-5.915z\"></path></g></svg>\n<div class=\"logo--text\">gradescope</div></a></div></nav><div class=\"l-mainWrapper\"><div class=\"sidebar--mobileOverlay\"></div><main class=\"l-main\" id=\"main-content\" tabindex=\"-1\"><div class=\"l-header\"></div><div class=\"l-contentWrapper\"><div class=\"l-content\"><header class=\"courseHeader\"><h1 class=\"courseHeader--title\">601.433/633</h1><div class=\"courseHeader--term\">Spring 2018</div></header><section><table class=\"table\" id=\"assignments-student-table\"><caption class=\"sr-only\">Assignments List</caption><thead><tr role=\"row\"><th role=\"columnheader\" scope=\"col\">Name</th><th role=\"columnheader\" scope=\"col\">Status</th><th class=\"table--complexHeader sorting-right\" role=\"columnheader\" scope=\"col\"><div aria-label=\"Due Date\"><span aria-hidden=\"true\" class=\"table--cell-hiddenOnMobile\">Released</span><span>Due (<abbr title=\"Eastern Time (US &amp; Canada)\">EDT</abbr>)</span></div></th><th class=\"table--hiddenColumn\">Release Date</th><th class=\"table--hiddenColumn\">Due Date</th></tr></thead><tbody><tr role=\"row\"><th class=\"table--primaryLink\" role=\"rowheader\" scope=\"row\"><a aria-label=\"View HW1\" href=\"/courses/15257/assignments/55844/submissions/5800032\">HW1</a></th><td class=\"submissionStatus\"><div class=\"submissionStatus--score\">40.5 / 50.0</div></td><td><div class=\"submissionTimeChart submissionTimeChart-\"><div class=\"progressBar--caption\"><span aria-label=\"Released at  January 30\" class=\"submissionTimeChart--releaseDate\">Jan 30</span><span aria-label=\"Due at February 06 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Feb 06 at  5:00PM</span><br /><span aria-label=\"Late Due Date at  February 07 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Late Due Date: Feb 07 at  5:00PM</span></div></div></td><td class=\"hidden-column\">2018-01-30 12:00:00 -0500</td><td class=\"hidden-column\">2018-02-06 14:00:00 -0800</td></tr><tr role=\"row\"><th class=\"table--primaryLink\" role=\"rowheader\" scope=\"row\"><a aria-label=\"View HW2\" href=\"/courses/15257/assignments/57840/submissions/6068796\">HW2</a></th><td class=\"submissionStatus\"><div class=\"submissionStatus--score\">36.0 / 50.0</div><div>5 Hours, 34 Minutes Late</div></td><td><div class=\"submissionTimeChart submissionTimeChart-\"><div class=\"progressBar--caption\"><span aria-label=\"Released at  February 06\" class=\"submissionTimeChart--releaseDate\">Feb 06</span><span aria-label=\"Due at February 15 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Feb 15 at  5:00PM</span><br /><span aria-label=\"Late Due Date at  February 22 at  1:00AM\" class=\"submissionTimeChart--dueDate\">Late Due Date: Feb 22 at  1:00AM</span></div></div></td><td class=\"hidden-column\">2018-02-06 17:00:00 -0500</td><td class=\"hidden-column\">2018-02-15 14:00:00 -0800</td></tr><tr role=\"row\"><th class=\"table--primaryLink\" role=\"rowheader\" scope=\"row\"><a aria-label=\"View HW4\" href=\"/courses/15257/assignments/62047/submissions/6598400\">HW4</a></th><td class=\"submissionStatus\"><div class=\"submissionStatus--score\">17.0 / 50.0</div></td><td><div class=\"submissionTimeChart submissionTimeChart-\"><div class=\"progressBar--caption\"><span aria-label=\"Released at  February 27\" class=\"submissionTimeChart--releaseDate\">Feb 27</span><span aria-label=\"Due at March 08 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Mar 08 at  5:00PM</span><br /><span aria-label=\"Late Due Date at  March 12 at 11:59PM\" class=\"submissionTimeChart--dueDate\">Late Due Date: Mar 12 at 11:59PM</span></div></div></td><td class=\"hidden-column\">2018-02-27 17:00:00 -0500</td><td class=\"hidden-column\">2018-03-08 14:00:00 -0800</td></tr><tr role=\"row\"><th class=\"table--primaryLink\" role=\"rowheader\" scope=\"row\"><a aria-label=\"View HW3\" href=\"/courses/15257/assignments/62050/submissions/6376271\">HW3</a></th><td class=\"submissionStatus\"><div class=\"submissionStatus--score\">27.5 / 50.0</div><div>7 Hours, 26 Minutes Late</div></td><td><div class=\"submissionTimeChart submissionTimeChart-\"><div class=\"progressBar--caption\"><span aria-label=\"Released at  February 15\" class=\"submissionTimeChart--releaseDate\">Feb 15</span><span aria-label=\"Due at February 27 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Feb 27 at  5:00PM</span><br /><span aria-label=\"Late Due Date at  February 28 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Late Due Date: Feb 28 at  5:00PM</span></div></div></td><td class=\"hidden-column\">2018-02-15 17:00:00 -0500</td><td class=\"hidden-column\">2018-02-27 14:00:00 -0800</td></tr><tr role=\"row\"><th class=\"table--primaryLink\" role=\"rowheader\" scope=\"row\"><a aria-label=\"View Quiz\" href=\"/courses/15257/assignments/66106/submissions/6780403\">Quiz</a></th><td class=\"submissionStatus\"><div class=\"submissionStatus--score\">127.0 / 250.0</div></td><td></td><td class=\"hidden-column\"></td><td class=\"hidden-column\"></td></tr><tr role=\"row\"><th class=\"table--primaryLink\" role=\"rowheader\" scope=\"row\">HW5</th><td class=\"submissionStatus submissionStatus-warning\"><div aria-hidden=\"true\" class=\"submissionStatus--bullet\" role=\"presentation\"></div><div class=\"submissionStatus--text\">No Submission</div></td><td><div class=\"submissionTimeChart submissionTimeChart-\"><div class=\"progressBar--caption\"><span aria-label=\"Released at  March 10\" class=\"submissionTimeChart--releaseDate\">Mar 10</span><span aria-label=\"Due at April 05 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Apr 05 at  5:00PM</span><br /><span aria-label=\"Late Due Date at  April 25 at 11:59PM\" class=\"submissionTimeChart--dueDate\">Late Due Date: Apr 25 at 11:59PM</span></div></div></td><td class=\"hidden-column\">2018-03-10 11:00:00 -0500</td><td class=\"hidden-column\">2018-04-05 14:00:00 -0700</td></tr><tr role=\"row\"><th class=\"table--primaryLink\" role=\"rowheader\" scope=\"row\">HW6</th><td class=\"submissionStatus submissionStatus-warning\"><div aria-hidden=\"true\" class=\"submissionStatus--bullet\" role=\"presentation\"></div><div class=\"submissionStatus--text\">No Submission</div></td><td><div class=\"submissionTimeChart submissionTimeChart-\"><div class=\"progressBar--caption\"><span aria-label=\"Released at  April 09\" class=\"submissionTimeChart--releaseDate\">Apr 09</span><span aria-label=\"Due at April 19 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Apr 19 at  5:00PM</span><br /><span aria-label=\"Late Due Date at  April 20 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Late Due Date: Apr 20 at  5:00PM</span></div></div></td><td class=\"hidden-column\">2018-04-09 11:00:00 -0400</td><td class=\"hidden-column\">2018-04-19 14:00:00 -0700</td></tr><tr role=\"row\"><th class=\"table--primaryLink\" role=\"rowheader\" scope=\"row\">HW7</th><td class=\"submissionStatus submissionStatus-warning\"><div aria-hidden=\"true\" class=\"submissionStatus--bullet\" role=\"presentation\"></div><div class=\"submissionStatus--text\">No Submission</div></td><td><div class=\"submissionTimeChart submissionTimeChart-\"><div class=\"progressBar--caption\"><span aria-label=\"Released at  April 24\" class=\"submissionTimeChart--releaseDate\">Apr 24</span><span aria-label=\"Due at May 03 at  5:00PM\" class=\"submissionTimeChart--dueDate\">May 03 at  5:00PM</span><br /><span aria-label=\"Late Due Date at  May 04 at  5:00PM\" class=\"submissionTimeChart--dueDate\">Late Due Date: May 04 at  5:00PM</span></div></div></td><td class=\"hidden-column\">2018-04-24 17:00:00 -0400</td><td class=\"hidden-column\">2018-05-03 14:00:00 -0700</td></tr><tr role=\"row\"><th class=\"table--primaryLink\" role=\"rowheader\" scope=\"row\"><a aria-label=\"View Final\" href=\"/courses/15257/assignments/78678/submissions/8045813\">Final</a></th><td class=\"submissionStatus\"><div class=\"submissionStatus--score\">225.0 / 370.0</div></td><td></td><td class=\"hidden-column\"></td><td class=\"hidden-column\"></td></tr></tbody></table></section><div class=\"modal\" id=\"submit-fixed-length-modal\"><div class=\"modal-header modal--heading\"><h1>Submit Assignment</h1></div><div class=\"modal-subtitle modal--subheading\"><span class=\"modal-subtitle-icon modal--subheadingIcon\"><i class=\"fa fa-info-circle\"></i></span><span class=\"modal-subtitle-text\">Upload a PDF containing your responses to the assignment.</span></div><div class=\"modal-body modal--body\"><div class=\"msg warning msg-warning late-submission-warning\">This submission will be marked late. Please refer to your course's policy for handling late\nwork.</div><form id=\"submit-fixed-length-form\" enctype=\"multipart/form-data\" action=\"/courses/15257\" accept-charset=\"UTF-8\" method=\"post\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" /><input type=\"hidden\" name=\"authenticity_token\" value=\"D9GN+xSNSzSWYoerK/NNl4DIym4NioWQmeXzdpk3bdoHasMyu0xG0VLT/7xcSe55ceI3dkrFQU95gMKcIs5l3g==\" /><div class=\"form-group form-file-upload fileUpload\"><label for=\"submission_pdf_attachment\"><label class=\"file-upload-label form-label form--label-header\"><span>File</span></label><input required=\"required\" name=\"pdf_attachment\" class=\"fileUpload--input \" tabindex=\"-1\" aria-hidden=\"true\" type=\"file\" id=\"submission_pdf_attachment\" /><i class=\"fa fa-file-text-o\"></i><span class=\"file-upload-prompt fileUpload--prompt\"></span><span class=\"btnContainer\"><span class=\"btn file-upload-btn btn-fileUpload js-interactiveElement\">Select PDF</span></span></label></div><div class=\"btnContainer\"><input type=\"submit\" name=\"commit\" value=\"Upload PDF\" id=\"submit\" class=\"btn btn-primary modal--btnPrimary\" /><button class=\"btn btn-cancel modal--btnCancel\" type=\"button\">Cancel</button></div></form></div></div><dialog aria-describedby=\"submit-variable-length-modal-subheading\" aria-labelledby=\"submit-variable-length-modal-heading\" aria-modal=\"true\" class=\"modal modal-withFooter\" id=\"submit-variable-length-modal\" open=\"true\" role=\"dialog\" tabindex=\"-1\"><div role=\"document\"><h1 class=\"modal--heading\" id=\"submit-variable-length-modal-heading\">Submit Assignment</h1><div class=\"modal-subtitle modal--subheading\"><span class=\"modal-subtitle-icon modal--subheadingIcon\"><i aria-hidden=\"true\" class=\"fa fa-info-circle\"></i></span><span class=\"modal-subtitle-text\" id=\"submit-variable-length-modal-subheading\">Submit images for each question, or a single PDF.</span></div><div class=\"modal-body modal--body\"><div class=\"msg error msg-error\">The outline for this assignment has not been set up yet. Notify your instructor to fix this problem.</div><div class=\"msg warning msg-warning late-submission-warning\">This submission will be marked late. Please refer to your course's policy for handling\nlate work.</div><p class=\"u-instructionText\">Attach one or more image files for your answer to each question.\nYou can also submit a single PDF, and then select the pages corresponding to each question\nin the next step.</p><div class=\"linkGallery\" id=\"submit-links-container\"><a class=\"submit-variable-length-choice linkGallery--link\" id=\"submit-variable-length-images\"><i aria-hidden=\"true\" class=\"fa fa-image\"></i><div class=\"submit-variable-length-text linkGallery--linkText\">Submit Images</div></a><button class=\"submit-variable-length-choice btn-link linkGallery--link\" id=\"submit-variable-length-pdf\"><i aria-hidden=\"true\" class=\"fa fa-file-pdf-o\"></i><div class=\"submit-variable-length-text linkGallery--linkText\">Submit PDF</div></button></div></div><div class=\"modal--footer modal--footer-closeButton js-closeModal js-interactiveElement\"><span aria-hidden=\"true\" class=\"fa-stack modal--footerIcon\"><i class=\"fa fa-circle-thin fa-stack-2x\"></i><i class=\"fa fa-times fa-stack-1x\"></i></span><span class=\"text modal--footerText\">Close</span></div></div></dialog><dialog aria-describedby=\"submit-code-modal-subheading\" aria-labelledby=\"submit-code-modal-heading\" aria-modal=\"true\" class=\"modal\" id=\"submit-code-modal\" open=\"true\" role=\"dialog\" tabindex=\"-1\"><div role=\"document\"><h1 class=\"modal--heading\" id=\"submit-code-modal-heading\">Submit Programming Assignment</h1><div class=\"modal-subtitle modal--subheading\"><span class=\"modal-subtitle-icon modal--subheadingIcon\"><i aria-hidden=\"true\" class=\"fa fa-info-circle\"></i></span><span class=\"modal-subtitle-text\" id=\"submit-code-modal-subheading\">Upload all files for your submission</span></div><div class=\"modal-body modal--body\"><div class=\"msg warning msg-warning late-submission-warning\">This submission will be marked late. Please refer to your course's policy for handling late\nwork.</div><form id=\"submit-code-form\" autocomplete=\"off\" enctype=\"multipart/form-data\" action=\"/courses/15257\" accept-charset=\"UTF-8\" method=\"post\"><input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" /><input type=\"hidden\" name=\"authenticity_token\" value=\"xAa6t5oLwR6pcwgqUoE/ZeqcIsUDIxQ3sufmygxq6fHMvfR+NcrM+23CcD0lO5yLG7bf3URs0OhSgtcgt5Ph9Q==\" /><div class=\"js-submissionMethodSwitcher\"></div><div class=\"fileUploadArea\"><div aria-label=\"Select to upload files\" class=\"form-file-drop-area js-interactiveElement\"><div class=\"form-file-drop-area-header\">Drag & Drop</div><div class=\"form-file-drop-area-text\">Any file(s) including .zip. Click to browse.</div></div><div class=\"form-file-drop-message\">Add files via Drag & Drop or <button class=\"btn btn-link btn-tealLink form-file-drop-browse\" type=\"button\">Browse Files.</button></div><div class=\"form-file-previews-container\"><div class=\"form-file-previews-header\"><div class=\"form-file-preview-filename\">Name</div><div class=\"form-file-preview-file-size\">Size</div><div class=\"form-file-preview-file-progress-container-header\">Progress</div><div class=\"form-file-preview-remove-button-header\"><i class=\"fa fa-times\"></i></div></div><div class=\"form-file-previews\"></div></div></div><div class=\"js-repositorySelector\" data-bitbucket-authentication-path=\"/bitbucket_authentication/new?assignment_id=nil\" data-bitbucket-is-authenticated=\"false\" data-bitbucket-repositories-url=\"https://www.gradescope.com/bitbucket_projects\" data-github-authentication-path=\"/github_authentication/new?assignment_id=nil\" data-github-is-authenticated=\"false\" data-github-repositories-url=\"https://www.gradescope.com/github_repositories\"></div><div class=\"form--group form-group js-leaderboardGroup is-hidden\"><label class=\" form-label form--label-header\" for=\"submission_leaderboard_name\">Leaderboard Name</label><input type=\"text\" name=\"submission[leaderboard_name]\" id=\"submission_leaderboard_name\" placeholder=\"Provide a name for the leaderboard\" required=\"required\" class=\" form--textInput\" /></div><div class=\"btnContainer\"><button class=\"btn btn-primary modal--btnPrimary\" id=\"upload-files\" type=\"submit\">Upload</button><button class=\"btn btn-cancel modal--btnCancel\" id=\"cancel\" type=\"button\">Cancel</button></div></form></div></div></dialog><div class=\"hidden\" id=\"dropzone-preview-template\"><div class=\"form-file-preview\"><div class=\"form-file-preview-filename\"><span data-dz-name=\"\"></span></div><div class=\"form-file-preview-file-size\"><span data-dz-size=\"\"></span></div><div class=\"form-file-preview-file-progress-container\"><div data-dz-uploadprogress=\"\"></div></div><div class=\"form-file-preview-remove-button\"><span data-dz-remove=\"\"><i class=\"fa fa-times\"></i></span></div><div class=\"form-file-preview-error-msg\"><div data-dz-errormessage=\"\"></div></div></div></div></div></div></main></div></body></html>",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/scrape",
							"host": [
								"{{host}}"
							],
							"path": [
								"scrape"
							]
						}
					},
					"response": []
				}
			],
			"description": "POST Request: The Scrape endpoint is for the scraper. The `document` param provided is the HTML DOM of the page being scraped, the `url` param is the web address of the page being scraped as seen from the client and the `token` param is a UUID of the extension. This token can be used to lookup the account for the user responsible for the scraper.\n\nReturns status code 200 upon success.\n\nReturns JSON:\n\ni.e.\n```\n{\n\t\"courses\": [\n\t\t{\"uuid\": <course UUID>},\n\t\t{\"url\": <url>}\n\t]\n}\n```",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8799bc52-28ae-4738-a66c-1be0e7a9b229",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e39d4647-fd06-4f42-ba51-8aaecb8697ef",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Assignment",
			"item": [
				{
					"name": "Success",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/assignment/{{assignmentIdentifier}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"assignment",
								"{{assignmentIdentifier}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "GET Request: Gets an Assignment based on its `assignment_id` param. Must ensure authorization and if not authorized, returns 401 status code.\n\nUpon success, returns 200.\n\nIf assignment is not found, returns 404."
		},
		{
			"name": "Mark Assignment Complete",
			"item": [
				{
					"name": "Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27b9ffed-bbb1-4123-9c37-e07102481672",
								"exec": [
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/login`,",
									"    method: 'POST',",
									"    body: {",
									"        mode: 'formdata',",
									"        formdata: [",
									"            {key: 'username', value: 'test_user', description: {content: \"\", type: \"text/plain\"}},",
									"            {key: 'password', value: '12345', description: {content: \"\", type: \"text/plain\"}},",
									"        ]",
									"    }",
									"};",
									"",
									"pm.sendRequest(request, function(err, response) {",
									"    request = {",
									"        url:`${pm.variables.get(\"host\")}/term`,",
									"        method: 'POST',",
									"        body: {",
									"            mode: 'formdata',",
									"            formdata: [",
									"                {key: 'start_date', value: '2018-10-10', description: {content: \"\", type: \"text/plain\"}},",
									"                {key: 'end_date', value: '2018-12-20', description: {content: \"\", type: \"text/plain\"}},",
									"                {key: 'title', value: 'Fall 2018', description: {content: \"\", type: \"text/plain\"}}",
									"            ]",
									"        }",
									"    };",
									"    ",
									"    pm.sendRequest(request, function (err, response) {",
									"        if (response.code == 201) {",
									"            pm.environment.set(\"TERM_ID\", response.text());",
									"                ",
									"            request = {",
									"                url:`${pm.variables.get(\"host\")}/course`,",
									"                method: 'POST',",
									"                body: {",
									"                    mode: 'formdata',",
									"                    formdata: [",
									"                        {key: 'term_id', value: pm.environment.get(\"TERM_ID\"), description: {content: \"\", type: \"text/plain\"}},",
									"                        {key: 'title', value: 'Fall 2018', description: {content: \"\", type: \"text/plain\"}},",
									"                        {key: 'gradeScope_id', value: 255, description: {content: \"\", type: \"text/plain\"}}",
									"                    ]",
									"                }",
									"            };",
									"        ",
									"            pm.sendRequest(request, function (err, response) {",
									"                if (response.code == 201) {",
									"                    pm.environment.set(\"COURSE_ID\", response.text());",
									"                    ",
									"                    request = {",
									"                        url:`${pm.variables.get(\"host\")}/assignment`,",
									"                        method: 'POST',",
									"                        body: {",
									"                            mode: 'formdata',",
									"                            formdata: [",
									"                                {key: 'due_date', value: \"2018-09-16\", description: {content: \"\", type: \"text/plain\"}},",
									"                                {key: 'course_id', value: pm.environment.get(\"COURSE_ID\"), description: {content: \"\", type: \"text/plain\"}},",
									"                                {key: 'title', value: 'Assignment 1', description: {content: \"\", type: \"text/plain\"}},",
									"                                {key: 'grade', value: '20/30', description: {content: \"\", type: \"text/plain\"}}",
									"                            ]",
									"                        }",
									"                    }",
									"                    ",
									"                    pm.sendRequest(request, function (err, response) {",
									"                        if (response.code == 201) {",
									"                            pm.environment.set(\"ASSIGNMENT_ID\", response.text());",
									"                        }",
									"                    });",
									"                }",
									"            });",
									"        }",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "23aa34fe-5e88-4d4f-bc6a-6d7293a92058",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
									"",
									"request = {",
									"    url:`${pm.variables.get(\"host\")}/term/${pm.environment.get('TERM_ID')}`,",
									"    method: 'DELETE'",
									"};",
									"",
									"pm.sendRequest(request);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "time_spent",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/assignment/{{ASSIGNMENT_ID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"assignment",
								"{{ASSIGNMENT_ID}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "time_spent",
											"value": "2",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}/assignment/{{ASSIGNMENT_ID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"assignment",
										"{{ASSIGNMENT_ID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 18 Dec 2018 04:44:05 GMT"
								},
								{
									"key": "Server",
									"value": "Javalin"
								},
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "720"
								}
							],
							"cookie": [],
							"body": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" href=\"/app.css\" />\n        <link rel=\"stylesheet\" href=\"/login.css\" />\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n        <meta charset=\"UTF-8\">\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.0.0/jquery.min.js\"></script>\n        <script>\r\n    \tif( !window.jQuery ) document.write('\n            <script src=\"js/jquery-3.0.0.min.js\"><\\/script>');\r\n    \n            </script>\n            <link rel=\"stylesheet\" href=\"/fullcalendar.css\">\n            <link rel=\"stylesheet\" media=\"print\" href=\"/fullcalendar.print.min.css\">\n            <script src='/js/moment.min.js'></script>\n            <script src='/js/fullcalendar.js'></script>\n            <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>\n            <title> Calendue </title>\n        </head>\n        <body>\n            <div class=\"flash\">\n                <ul>\n                    <li>Must be logged in to view this page.</li>\n                </ul>\n            </div>\n            <div id=\"content-container\">\n                <h2>Calendue Login</h2>\n                <form action=\"/login\" method=\"post\">\n                    <div class=\"container\">\n                        <label for=\"username\">\n                            <b>Username</b>\n                        </label>\n                        <input type=\"text\" placeholder=\"Enter Username\" name=\"username\">\n                        <label for=\"password\">\n                            <b>Password</b>\n                        </label>\n                        <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" required>\n                        <button type=\"submit\">Login</button>\n                    </div>\n                    <div class=\"container\" style=\"background-color:#f1f1f1\">\n                        <button type=\"button\" class=\"cancelbtn\">Cancel</button>\n                        <span class=\"psw\">Forgot \n                            <a href=\"#\">password?</a>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </body>"
						}
					]
				}
			],
			"description": "PUT Request: Marks the assignment as complete. Accepts `assignment_id` param for the assignment ID and a `time_spent` param for the time spent on the assignment.\n\nReturns 404 if the assignment is not found or 200 if successful.\n\nReturns 400 for validation error (if `time_spent` is blank)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ac8257ba-230d-410f-ae94-f3bbe5ba8f84",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1269b2e6-1b71-402e-b513-1b23606ef5af",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Assignment Scores",
			"item": [
				{
					"name": "Success",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/assignment/{{assignmentIdentifier}}/scores",
							"host": [
								"{{host}}"
							],
							"path": [
								"assignment",
								"{{assignmentIdentifier}}",
								"scores"
							]
						}
					},
					"response": []
				}
			],
			"description": "GET Request: Gets the all-time assignment score distribution for the assignment given by the `assignment_id` param. \n\nReturns 200 upon success and 404 if the assignment is not found with the provided ID.\n\nReturns JSON:\n\n{\n\t\"scores\": []\n}"
		}
	]
}